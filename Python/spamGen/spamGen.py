# coding: cp1251
import random

class SpamGenerator():

    onegin = (
        ( "Я помню", "Не помню", "Забыть бы", "Купите", "Очкуешь", 
        "Какое", "Угробил", "Хреново", "Открою", "Ты чуешь?", "Помыть бы" ),

        ( "чудное", "странное", "некое", "вкусное", "пьяное",
        "свинское", "чоткое", "сраное", "нужное", "конское"),

        ( "мгновенье", "затменье", "хотенье", "варенье", "творенье",
        "везенье", "рожденье", "смущенье", "печенье", "ученье"),

        ( "передо мной", "под косячком", "на кладбище", "в моих мечтах", "под скальпилем",
        "в моих штанах", "из-за угла", "в моих ушах", "в ночном горшке", "из головы"),

        ( "явилась ты", "добилась ты", "торчат кресты", "стихов листы",
        "забилась ты", "мои трусы", "поют дрозды", "из темноты", "помылась ты"),

        ( "мимолетное", "детородное", "психотропное", "кайфоломное",
        "очевидное", "у воробушков", "эдакое вот", "нам не чуждое", "благородное"),

        ( "виденье", "сиденье", "паренье", "сужденье", "вращенье",
        "сношенье", "смятенье", "теченье", "паденье", "сплетенье"),

        ( "гений", "сторож", "символ", "спарта", 
        "правда", "ангел", "водка", "пиво", "ахтунг", "хопа"),

        ( "чистой", "вечной", "тухлой", "просит", "грязной",
        "липкой", "на хрен", "в пене", "женской", "жаждет"),

        ( "красоты", "мерзлоты", "суеты", "наркоты",
        "срамоты", "школоты", "типа ты", "простоты", "наготы") )

    rave = (
        ( "Приходит", "Влетает", "Въезжает" ),

        ( "учёный", "больной", "пикачу", "кот", "никто", "террорист",
        "сантехник", "динозавр", "мама", "менеджер"), 

        ( "в офис", "в небытие", "в больницу", "драться", "в лабораторию",
        "на вызов", "в парк юрского периода", 
        "на родительское собраине", "к кошке", "в метро"), 

        ( "<<Я совершил открытие!>>", "<<Пика-пика!>>", "Мысленно <<привет, ничто!>>",
        "<<У меня болит голова>>", "<<Давай заведем котят>>", "<<Я мама Вовочки>>",
        "<<Я увольняюсь>>", "<<Аллах акбар>>", "<<Возьмите меня есть туристов>>",
        "<<Какой серьёзный засор>>"),

        ( "кошка отвечает", "учительница", "небытие ему в ответ",
        "доктор ему", "тут по громкоговорителю", "ученое сообщество",
        "в ответ слышит", "из трубы голос", "начальник ему", "бульбозавр на это"), 

        ( "Ты не пикачу, ты сантехник.", "Я не доктор, я динозавр.",
        "Давай лучше мышат.", "Привет, ничтожество.", 
        "Следующая станция бесконечная.", "Вы не мама, вы папа.",
        "Нам такие не нужны!", "Ты же на пенсию вышел...", 
        "Ты новый Эйнштейн!", "Ну хочешь шутку расскажу."), 
        
        ( "Энтропия нарастала...", "И уехал в Казахстан...",
        "Динозавр всё равно съел туристов.", "Держите зачётку.", 
        "И все стали танцевать!", "Вот и сказочке конец!", 
        "Так появилась вселенная...", "С тех пор это закон...", 
        "И немедленно выпил!", ")))))" )
    )

    speech = (
        (
        "Товарищи!", "С другой стороны,", "Равным образом, ",
        "Не сделует, однако, забывать, что", "Таким образом,",
        "Повседневная практика показывает, что"
        ),
        (
        "реализация намеченных планов заданий", "Рамки и место обучения кадров",
        "постоянный количественный рост и сфера нашей активности",
        "сложившаяся структура организации", "новая модель организационной деятельности",
        "дальнейшее развитие форм деятельности"
        ),
        (
        "играет важную роль в формировании", "требует от нас анализа",
        "требует определения и уточнения", "Способствует подготовке и реализации",
        "обеспечивает широкому кругу специалистов участие в формировании",
        "позволяет выполнить важные задания по разработке"
        ),
        (
        "существенных финансовых и административных условий.", 
        "дальнейшх направлений развития.", "системы массового участия.", 
        "позиций, занимаемых участниками в отношении поставленных задач.", 
        "новых предложений.", "направлений прогрессивного развития."
        )
    )

    panagrammRu = (
        "Эй, жлоб! Где туз? Прячь юных съёмщиц в шкаф.",
        "Друг мой эльф! Яшке б свёз птиц южных чащ!",
        "В чащах юга жил бы цитрус? Да, но фальшивый экземпляр!",
        "Шеф взъярён тчк щипцы с эхом гудбай Жюль.",
        "Экс-граф? Плюш изъят. Бьём чуждый цен хвощ!",
        "Эх, чужак! Общий съём цен шляп (юфть) — вдрызг!",
        "Эх, чужд кайф, сплющь объём вши, грызя цент.",
        "Чушь: гид вёз кэб цапф, юный жмот съел хрящ." )

    panagrammEn = (
        "The quick brown fox jumps over the lazy dog.",
        "Jackdaws love my big sphinx of quartz.",
        "The five boxing wizards jump quickly." )

    listOfWords = ( "spam", "bla", "eggs", "foo", "bar", "snitzel", 
                    "ice cream", "sour cream", "potato", "toast", "baz" )


    def __init__( self ):
        random.seed()

    def genSpeech( self ):
        phraze  = random.choice( self.speech[0] ) + " "
        phraze += random.choice( self.speech[1] ) + " "
        phraze += random.choice( self.speech[2] ) + " "
        phraze += random.choice( self.speech[3] )
        return phraze

    def genRaveStory( self ):
        phraze  = random.choice( self.rave[0] ) + " "
        phraze += random.choice( self.rave[1] ) + " "
        phraze += random.choice( self.rave[2] ) + " и говорит: "
        phraze += random.choice( self.rave[3] ) + ", a "
        phraze += random.choice( self.rave[4] ) + ": "
        phraze += random.choice( self.rave[5] ) + " "
        phraze += random.choice( self.rave[6] )
        return phraze

    def genOnegin( self ):
        phraze  = random.choice( self.onegin[0] ) + " "
        phraze += random.choice( self.onegin[1] ) + " "
        phraze += random.choice( self.onegin[2] ) + ": "
        phraze += random.choice( self.onegin[3] ) + " "
        phraze += random.choice( self.onegin[4] ) + ", как "
        phraze += random.choice( self.onegin[5] ) + " "
        phraze += random.choice( self.onegin[6] ) + ", как "
        phraze += random.choice( self.onegin[7] ) + " "
        phraze += random.choice( self.onegin[8] ) + " "
        phraze += random.choice( self.onegin[9] )
        return phraze

    def genPanagrammRu( self ):
        return random.choice( self.panagrammRu )

    def genPanagrammEn( self ):
        return random.choice( self.panagrammEn )

    def genBlaBla( self ):
        line  = random.choice( self.listOfWords ) + " "
        line += random.choice( self.listOfWords ) + " "
        line += random.choice( self.listOfWords ) + " "
        line += random.choice( self.listOfWords )
        return line

    def generateMessage( self ):

        number = random.randrange( 6 )
        #newLine = "{0}: line {1:04d}: ".format( time.strftime("%H:%M:%S_%d.%m.%y"), number )
        newLine = ""
        if number == 0:
            newLine += self.genPanagrammRu()
        elif number == 1:
            newLine += self.genRaveStory()
        elif number == 2:
            newLine += self.genPanagrammEn()
        elif number == 3:
            newLine += self.genOnegin()
        elif number == 4:
            newLine += self.genSpeech()
        elif number == 5:
            newLine += self.genBlaBla()
        else: 
            newLine += str( random.randrange( 65535 ) )

        return newLine

